{"ast":null,"code":"import'./App.css';import toast,{Toaster}from'react-hot-toast';import BoardContainer from'./BoardContainer';import Navbar from'./Navbar';import{useState,useEffect,useRef}from'react';import Keyboard from'./Keyboard';import db4 from'./db-4.js';import db5 from'./db-5.js';import db6 from'./db-6.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const generateRandomIndex=db=>{let randomIndex=Math.floor(Math.random()*db.length);return randomIndex;};const initialGrid=(rows,cols)=>{const initialGrid=[];for(let i=0;i<rows;i++){initialGrid[i]=[];for(let j=0;j<cols;j++){initialGrid[i][j]={letter:\"\",color:\"#FFFFFF\"};}}return initialGrid;};export default function App(){const[input,setInput]=useState([]);const[inputRow,setInputRow]=useState(0);const dividerRef=useRef(null);const[isGameOver,setIsGameOver]=useState(false);const[isActiveBoardId,setIsActiveBoardId]=useState(1);const[boards,setBoards]=useState([{id:1,rows:5,cols:4,grid:initialGrid(5,4),gridFall:55,answer:db4[generateRandomIndex(db4)]},{id:2,rows:5,cols:5,gridFall:55,grid:initialGrid(5,5),answer:db5[generateRandomIndex(db5)]},{id:3,rows:5,cols:6,gridFall:55,grid:initialGrid(5,6),answer:db6[generateRandomIndex(db6)]}]);const[activeBoard,setActiveBoard]=useState(boards[0]);// save\nconst didMount=useRef(false);const setGrid=(newGrid,boardId)=>{// takes in grid, sets the active board grid\nsetBoards(oldBoards=>{const newBoards=[...oldBoards];const boardIndex=boards.findIndex(board=>board.id===boardId);newBoards[boardIndex]={...newBoards[boardIndex],grid:newGrid};return newBoards;});};useEffect(()=>{setActiveBoard(boards.find(board=>board.id===isActiveBoardId));},[isActiveBoardId]);useEffect(()=>{if(didMount.current){}else{didMount.current=true;}},[isGameOver]);const inputValidator=userInput=>{const ans=activeBoard.answer.split(\"\");const subArr=[];const ansArr=[];for(let i=0;i<userInput.length;i++){let idx=ans.findIndex(x=>x===userInput[i].letter.toLowerCase());if(idx!=-1){if(idx===i){subArr.push({letter:userInput[i].letter,color:\"#6AAA64\",fontColor:\"#FFFFFF\"});}else{subArr.push({letter:userInput[i].letter,color:\"#C9B458\",fontColor:\"#FFFFFF\"});}ans[idx]=\"\";}else{subArr.push({letter:userInput[i].letter,color:\"#787C7D\",fontColor:\"#FFFFFF\"});}}setBoards(oldBoards=>{const newBoards=[...oldBoards];const boardIndex=boards.findIndex(board=>board.id===isActiveBoardId);const newGrid=[...newBoards[boardIndex].grid];newGrid[inputRow]=subArr;newBoards[boardIndex]={...newBoards[boardIndex],grid:newGrid};return newBoards;});const isAnswer=subArr.every(el=>el.color===\"#6AAA64\");if(isAnswer){if(isActiveBoardId===3){toast(\"Winner!\");setIsGameOver(true);}else{toast(\"Nice work. Keep going.\");setIsActiveBoardId(isActiveBoardId+1);setInputRow(0);return;}}setInputRow(oldInputRow=>{return oldInputRow+1;});if(inputRow+1===activeBoard.rows&&!isAnswer){toast(\"Game over.\");setIsGameOver(true);return;}setInput([]);};return/*#__PURE__*/_jsxs(\"div\",{id:\"main\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"div\",{id:\"game\",children:[/*#__PURE__*/_jsx(Toaster,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"columns\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"board-col\",children:/*#__PURE__*/_jsx(BoardContainer,{isGameOver:isGameOver,setIsGameOver:setIsGameOver,board:boards[0],isActiveBoard:isActiveBoardId===1,setGrid:setGrid,dividerRef:dividerRef,input:input,inputRow:inputRow})}),/*#__PURE__*/_jsx(\"div\",{className:\"board-col\",children:/*#__PURE__*/_jsx(BoardContainer,{isGameOver:isGameOver,setIsGameOver:setIsGameOver,board:boards[1],isActiveBoard:isActiveBoardId===2,setGrid:setGrid,dividerRef:dividerRef,input:input,inputRow:inputRow})}),/*#__PURE__*/_jsx(\"div\",{className:\"board-col\",children:/*#__PURE__*/_jsx(BoardContainer,{isGameOver:isGameOver,setIsGameOver:setIsGameOver,board:boards[2],isActiveBoard:isActiveBoardId===3,setGrid:setGrid,dividerRef:dividerRef,input:input,inputRow:inputRow})}),/*#__PURE__*/_jsxs(\"div\",{className:\"keyboard-wrapper\",children:[/*#__PURE__*/_jsx(\"hr\",{ref:dividerRef,id:\"divider\"}),/*#__PURE__*/_jsx(Keyboard,{isGameOver:isGameOver,wordLength:boards[isActiveBoardId-1].cols,inputRow:inputRow,input:input,setInput:setInput,inputValidator:inputValidator})]})]})]})]});}","map":{"version":3,"names":["toast","Toaster","BoardContainer","Navbar","useState","useEffect","useRef","Keyboard","db4","db5","db6","jsx","_jsx","jsxs","_jsxs","generateRandomIndex","db","randomIndex","Math","floor","random","length","initialGrid","rows","cols","i","j","letter","color","App","input","setInput","inputRow","setInputRow","dividerRef","isGameOver","setIsGameOver","isActiveBoardId","setIsActiveBoardId","boards","setBoards","id","grid","gridFall","answer","activeBoard","setActiveBoard","didMount","setGrid","newGrid","boardId","oldBoards","newBoards","boardIndex","findIndex","board","find","current","inputValidator","userInput","ans","split","subArr","ansArr","idx","x","toLowerCase","push","fontColor","isAnswer","every","el","oldInputRow","children","className","isActiveBoard","ref","wordLength"],"sources":["C:/Users/daria/OneDrive/Documents/GitHub/wordle-anche/src/App.js"],"sourcesContent":["import './App.css';\r\nimport toast, {Toaster} from 'react-hot-toast';\r\n\r\nimport BoardContainer from './BoardContainer';\r\nimport Navbar from './Navbar';\r\nimport { useState, useEffect, useRef} from 'react';\r\nimport Keyboard from './Keyboard';\r\nimport db4 from './db-4.js';\r\nimport db5 from './db-5.js';\r\nimport db6 from './db-6.js';\r\n\r\n  const generateRandomIndex = (db) => {\r\n    let randomIndex = Math.floor(Math.random() * db.length);\r\n    return randomIndex;\r\n  }\r\n\r\n  const initialGrid = (rows, cols) => {\r\n    const initialGrid = [];\r\n    for(let i=0; i<rows; i++) {\r\n      initialGrid[i] = [];\r\n      for(let j=0; j<cols; j++){\r\n        initialGrid[i][j] = {\r\n          letter: \"\",\r\n          color: \"#FFFFFF\"\r\n        }\r\n      }\r\n    }\r\n    return initialGrid;\r\n  }\r\n\r\n\r\nexport default function App() {\r\n  const [input, setInput] = useState([]);\r\n  const [inputRow, setInputRow] = useState(0);\r\n  const dividerRef = useRef(null);\r\n  const [isGameOver, setIsGameOver] = useState(false);\r\n  const [isActiveBoardId, setIsActiveBoardId] = useState(1);\r\n  const [boards, setBoards] = useState([\r\n      {\r\n        id: 1,\r\n        rows: 5,\r\n        cols: 4,\r\n        grid: initialGrid(5, 4),\r\n        gridFall: 55,\r\n        answer: db4[generateRandomIndex(db4)]\r\n      },\r\n      {\r\n        id: 2,\r\n        rows: 5,\r\n        cols: 5,\r\n        gridFall: 55,\r\n        grid: initialGrid(5, 5),\r\n        answer: db5[generateRandomIndex(db5)]\r\n      },\r\n      {\r\n        id: 3,\r\n        rows: 5,\r\n        cols: 6,\r\n        gridFall: 55,\r\n        grid: initialGrid(5, 6),\r\n        answer:db6[generateRandomIndex(db6)]\r\n      }\r\n    ]);\r\n  const [activeBoard, setActiveBoard] = useState(boards[0]); // save\r\n  const didMount = useRef(false);\r\n\r\n  const setGrid = (newGrid, boardId) => { // takes in grid, sets the active board grid\r\n      setBoards((oldBoards) => {\r\n      const newBoards = [...oldBoards];\r\n      const boardIndex = boards.findIndex((board) => board.id === boardId);\r\n      newBoards[boardIndex] =  {...newBoards[boardIndex], grid: newGrid};\r\n      return newBoards;\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    setActiveBoard(\r\n      boards.find((board) => board.id === isActiveBoardId)\r\n    )\r\n  }, [isActiveBoardId])\r\n\r\n  useEffect(() => {\r\n    if (didMount.current) {\r\n    } else {\r\n      didMount.current = true;\r\n    }\r\n  }, [isGameOver])\r\n\r\n  const inputValidator = (userInput) => {\r\n    const ans = activeBoard.answer.split(\"\");\r\n    const subArr = [];\r\n    const ansArr = [];\r\n    for(let i=0; i < userInput.length; i++){\r\n        let idx = ans.findIndex(x => x === userInput[i].letter.toLowerCase());\r\n        if(idx != -1) {\r\n        if(idx === i) {\r\n          subArr.push({\r\n            letter: userInput[i].letter,\r\n            color: \"#6AAA64\",\r\n            fontColor: \"#FFFFFF\"\r\n          })\r\n        } else {\r\n          subArr.push({\r\n            letter: userInput[i].letter,\r\n            color: \"#C9B458\",\r\n            fontColor: \"#FFFFFF\"\r\n          })\r\n        }\r\n        ans[idx]=\"\"\r\n      }\r\n      else {\r\n        subArr.push({\r\n          letter: userInput[i].letter,\r\n          color: \"#787C7D\",\r\n          fontColor: \"#FFFFFF\"\r\n        })\r\n      }\r\n    }\r\n\r\n    setBoards((oldBoards) => {\r\n      const newBoards = [...oldBoards];\r\n      const boardIndex = boards.findIndex((board) => board.id === isActiveBoardId);\r\n      const newGrid = [...newBoards[boardIndex].grid];\r\n      newGrid[inputRow] = subArr;\r\n      newBoards[boardIndex] =  {...newBoards[boardIndex], grid: newGrid};\r\n      return newBoards;\r\n    })\r\n\r\n    const isAnswer = subArr.every((el) => el.color === \"#6AAA64\");\r\n    if(isAnswer) {\r\n      if(isActiveBoardId === 3) {\r\n        toast(\"Winner!\");\r\n        setIsGameOver(true);\r\n      }\r\n      else {\r\n        toast(\"Nice work. Keep going.\");\r\n        setIsActiveBoardId(isActiveBoardId + 1);\r\n        setInputRow(0);\r\n        return;\r\n      }\r\n    }\r\n\r\n    setInputRow((oldInputRow) => {\r\n      return oldInputRow + 1;\r\n    })\r\n\r\n    if(inputRow + 1 === activeBoard.rows && !isAnswer) {\r\n      toast(\"Game over.\")\r\n      setIsGameOver(true);\r\n      return;\r\n    }\r\n\r\n    setInput([]);\r\n  }\r\n\r\n  return (\r\n    <div id=\"main\">\r\n      <Navbar/>\r\n      <div id=\"game\">\r\n        <Toaster/>\r\n        <div className=\"columns\">\r\n          <div className=\"board-col\">\r\n            <BoardContainer isGameOver={isGameOver} setIsGameOver={setIsGameOver} board={boards[0]} isActiveBoard={isActiveBoardId === 1} setGrid={setGrid} dividerRef={dividerRef} input={input} inputRow={inputRow}/>\r\n          </div>\r\n          <div className=\"board-col\">\r\n            <BoardContainer isGameOver={isGameOver} setIsGameOver={setIsGameOver} board={boards[1]} isActiveBoard={isActiveBoardId === 2} setGrid={setGrid} dividerRef={dividerRef} input={input} inputRow={inputRow}/>\r\n          </div>\r\n          <div className=\"board-col\">\r\n            <BoardContainer isGameOver={isGameOver} setIsGameOver={setIsGameOver} board={boards[2]} isActiveBoard={isActiveBoardId === 3} setGrid={setGrid} dividerRef={dividerRef} input={input} inputRow={inputRow}/>\r\n          </div>\r\n          <div className=\"keyboard-wrapper\">\r\n            <hr ref={dividerRef} id=\"divider\"/>\r\n            <Keyboard isGameOver={isGameOver} wordLength={boards[isActiveBoardId - 1].cols} inputRow={inputRow} input={input} setInput={setInput} inputValidator={inputValidator}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}